<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
		http://www.springframework.org/schema/jms 
        http://www.springframework.org/schema/jms/spring-jms.xsd
        http://activemq.apache.org/schema/core 
        http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.fi.crm.campaigns.business" />

	<ehcache:annotation-driven />

	<ehcache:config cache-manager="cacheManager">
		<ehcache:evict-expired-elements
			interval="60" />
	</ehcache:config>

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/WEB-INF/ehcache.xml" />
	</bean>

	<!-- this is the service object that we want to make transactional -->
	<bean id="auditService"
		class="com.fi.crm.campaigns.business.services.audit.AuditService" />
	<bean id="securityService"
		class="com.fi.crm.campaigns.business.services.security.SecurityService" />
	<bean id="campaignsService"
		class="com.fi.crm.campaigns.business.services.campaign.CampaignsService" />
	<bean id="tracingService"
		class="com.fi.crm.campaigns.business.services.tracing.TracingService" />
	<bean id="parametrizationService"
		class="com.fi.crm.campaigns.business.services.parametrization.ParametrizationService" />
	<bean id="authorService"
		class="com.fi.crm.campaigns.business.services.author.AuthorService" />
	<bean id="constantService"
		class="com.fi.crm.campaigns.business.services.constant.ConstantService" />
	<bean id="clientService"
		class="com.fi.crm.campaigns.business.services.client.ClientService" />
	<bean id="jmsMessageProducer" class="com.fi.crm.campaigns.business.jms.JmsMessageProducer" />
	<bean id="reportService"
		class="com.fi.crm.campaigns.business.services.report.ReportService" />

	<tx:annotation-driven />

	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="*" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>

	<!-- a PlatformTransactionManager is still required -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- (this dependency is defined somewhere else) -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/campaigns" />
		<property name="lookupOnStartup" value="true" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath*:com/fi/crm/campaigns/persistence/mappers/xml/*.xml" />
		<property name="typeAliasesPackage" value="com.fi.crm.campaigns.persistence.model" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fi.crm.campaigns.persistence.mappers" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- A connection to ActiveMQ -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.CustomActiveMQConnectionFactory">
		<constructor-arg name="constantService" ref="constantService"></constructor-arg>
	</bean>
	<bean id="cachedConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory"
		p:targetConnectionFactory-ref="amqConnectionFactory"
		p:sessionCacheSize="10" />

	<!-- A destination in ActiveMQ -->
	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="CAMPAIGNS.QUEUES" />
	</bean>

	<!-- A JmsTemplate instance that uses the cached connection and destination -->
	<bean id="messageDestination" class="com.fi.crm.campaigns.business.jms.JmsMessageListener" />
	<bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"
		p:connectionFactory-ref="cachedConnectionFactory"
		p:defaultDestination-ref="destination" />

	<jms:listener-container container-type="default"
		connection-factory="amqConnectionFactory" acknowledge="auto"
		concurrency="5-30" prefetch="5">
		<jms:listener destination="CAMPAIGNS.QUEUES" ref="messageDestination"
			method="onMessage" />
	</jms:listener-container>
</beans>
